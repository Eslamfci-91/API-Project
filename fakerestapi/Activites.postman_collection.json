{
	"info": {
		"_postman_id": "b137659e-2a03-44b0-a252-71b38d776446",
		"name": "Activites",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19395583"
	},
	"item": [
		{
			"name": "Activites",
			"item": [
				{
					"name": "Get Activites",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*var jsonData = pm.response.json();",
									"pm.test(\"first id test\", function()",
									"{",
									"    pm.expect(jsonData[0].id).to.eql(1)",
									"});",
									"*/",
									"var objectNums = pm.response.json().length;",
									"var randNum = Math.floor(Math.random()*objectNums);",
									"pm.collectionVariables.set(\"ActivityID\", pm.response.json()[randNum].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}api/v1/Activities",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Single Activity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.get(\"BaseURL\");",
									"pm.globals.set(\"BaseURL\",\"https://fakerestapi.azurewebsites.net/\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/api/v1/Activities/{{ActivityID}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"v1",
								"Activities",
								"{{ActivityID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "post user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 2,\n  \"userName\": \"eslam-mohamed\",\n  \"password\": \"1234@eslam\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/api/v1/users",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authors",
			"item": [
				{
					"name": "Get list of authors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\",function()",
									"{",
									"    pm.response.to.have.status(200)",
									"});",
									"pm.test(\"status code start with 2\",function()",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,203,204])",
									"});",
									"/*",
									"var objectNums = pm.response.json().length;",
									"var randNum = Math.floor(Math.random*objectNums);",
									"*/",
									"pm.test(\"Objects inside response contain, id, idBook, firstName, lastName\", function()",
									"{",
									"    pm.expect(pm.response.json()[0].id).to.be.eql(1)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/api/v1/Authors",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"v1",
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post New Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is OK\",function()",
									"{",
									"    pm.expect(pm.response.status).to.be.eql(\"OK\")",
									"});",
									"",
									"pm.test(\"idBook equal 5\",function()",
									"{",
									"    pm.expect(pm.response.json().idBook).to.be.eql(5)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 10,\n  \"idBook\": 5,\n  \"firstName\": \"Eslam\",\n  \"lastName\": \"Mohamed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}api/v1/Authors",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var objectNums = pm.response.json().length;",
									"var randNum = Math.floor(Math.random()*objectNums);",
									"pm.test(\"idBook eql 5\",function()",
									"{",
									"    pm.expect(pm.response.json()[randNum].idBook).to.be.eql(5)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/api/v1/Authors/authors/books/:idBook",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"v1",
								"Authors",
								"authors",
								"books",
								":idBook"
							],
							"variable": [
								{
									"key": "idBook",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Author by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var authId = parseInt (pm.collectionVariables.get(\"AuthorID\"));",
									"pm.test(\"id equal id added\",function()",
									"{",
									"    pm.expect(pm.response.json().id).to.eql(authId)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var pathParam =pm.request.url.variables.get(\"ID\");",
									"pm.collectionVariables.set(\"AuthorID\",pathParam);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}api/v1/Authors/:ID",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Authors",
								":ID"
							],
							"variable": [
								{
									"key": "ID",
									"value": "7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\",function()",
									"{",
									"    pm.response.to.have.status(200)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 1,\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"pageCount\": 5,\n  \"excerpt\": \"string\",\n  \"publishDate\": \"2022-08-13T15:33:25.088Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/api/v1/Authors/{{AuthorID}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"v1",
								"Authors",
								"{{AuthorID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "ActivityID",
			"value": "",
			"type": "string"
		},
		{
			"key": "AuthorID",
			"value": "",
			"type": "string"
		}
	]
}